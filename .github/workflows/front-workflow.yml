name: Front CI/CD Workflow
on: 
  push:
    branches: 
      - develop
    paths:
      - 'front/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'front/**'

jobs:
   build-and-test-front-with-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - 
      name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - 
      name: Install dependencies for front project
      run: npm ci
      working-directory: front
    - 
      name: Build front project
      run: npm run build --if-present
      working-directory: front
    - 
      name: Run test with coverage
      working-directory: front
      run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false
    - 
      name: Commit Coverage Report
      run: |
        git config --global user.email "mihai.cojusnean@gmail.com"
        git config --global user.name "GitHub Actions"
        git fetch --all
        git checkout coverage-reports
        git pull origin coverage-reports
        mkdir -p coverage-repport/front
        cp -r front/coverage/bobapp/* ./coverage-repport/front
        git add ./coverage-repport/front
        git commit -m "Update Coverage Reports"
        git push origin coverage-reports
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
   sonarqube-scan:
    needs: build-and-test-front-with-coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - 
        name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=CI-CD-OPENCLASSROOM-FRONT
            -DprojectName=CI-CD-OPENCLASSROOM-FRONT
            -Dsonar.test.inclusions=**/*.test.js,**/*.spec.js
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/*.test.ts
            
   build-push-docker:
    name: Build and push front docker image
    needs: [sonarqube-scan]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
       name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
      - 
        name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./front
          file:  ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
