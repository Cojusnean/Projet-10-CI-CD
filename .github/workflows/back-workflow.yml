name: Back CI/CD Workflow
on:
  push:
    branches:
      - develop
    paths:
      - 'back/**'
  pull_request:
    branches:
      - main
    paths:
      - 'back/**'
      
jobs:
  build-and-test-back-with-coverage:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v4
    - 
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    - 
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
       path: ~/.m2
       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
       restore-keys: |
        ${{ runner.os }}-m2-
    - 
      name: Build and Test back-end
      run: |
        mvn -B package --file back/pom.xml
        mvn test --file back/pom.xml
    - 
      name: Commit Coverage Report
      run: |
        git config --global user.email "mihai.cojusnean@gmail.com"
        git config --global user.name "GitHub Actions"
        git fetch --all
        git checkout coverage-reports
        git pull origin coverage-reports
        mkdir -p coverage-repport/back
        cp -r back/target/site/jacoco/* ./coverage-repport/back
        git add ./coverage-repport/back
        git commit -m "Update Coverage Reports"
        git push https://${{ secrets.GH_PAT }}@github.com/Cojusnean/CI-CD-OPENCLASSROOM.git coverage-reports
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
  sonarqube-scan:
    name: Run SonarQube Scanner
    needs: build-and-test-back-with-coverage
    runs-on: ubuntu-latest
        
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - 
        name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - 
        name: Run SonarQube Scanner
        run: mvn clean compile org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -DprojectName=CI-CD-OPENCLASSROOM-BACK --file back/pom.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-push-docker:
    name: Buid and push back docker image
    needs: [sonarqube-scan]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
       name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
      - 
        name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: ./back
          file:  ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
